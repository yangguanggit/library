1.文件.htaccess的基本作用
	.htaccess是一个纯文本文件，它里面存放着apache服务器配置相关的指令
	.htaccess的用途范围主要针对当前目录
	.htaccess主要的作用：url重写、自定义错误页面、MIME类型配置以及访问权限控制等，主要体现在伪静态的应用、图片防盗链、自定义404错误页面、阻止/允许特定ip/ip段、目录浏览与主页、禁止访问指定文件类型、文件密码保护等
	以下命令写入.htaccess文件生效

2.启用.htaccess的配置
	(1)启用.htaccess，需要修改httpd.conf，启用AllowOverride，并可以用AllowOverride限制特定命令的使用
		<Directory />
			Options +Indexes +FollowSymLinks +ExecCGI
			AllowOverride All
		</Directory>
	(2)如果需要使用.htaccess以外的其他文件名，需要修改httpd.conf，可以用AccessFileName指令来改变。例如，需要使用.config
		AccessFileName .config

3.配置.htaccess实现访问控制
	(1)访问控制基于Order命令，限制用户访问一些关键目录
		# Files后的波浪线表示启用正则表达式，简单的写法有<Files *>
		# Order命令通过allow,deny参数，apache首先找到并应用allow命令，然后应用deny命令，以阻止所有访问，也可以使用deny,allow
		<Files ~ "^.*\.([Ll][Oo][Gg])|([eE][xX][eE])">
			Order allow,deny
			Deny from all
		</Files>

4.配置.htaccess实现url重写
	(1)将RewriteEngine模式打开，RewriteEngine表示开启URL重写，RewriteRule是重写规则
		RewriteEngine On
		# Rewrite系统规则请勿修改
		RewriteRule ^p/([0-9]+)\.html$ index.php?post_id=$1
		RewriteRule ^u-(username|uid)-(.+)\.html$ space.php?$1=$2

5.配置.htaccess实现错误页面
	ErrorDocument 401 /error/401.php
	ErrorDocument 403 /error/403.php
	ErrorDocument 404 /error/404.php
	ErrorDocument 500 /error/500.php

6.htaccess常用命令和配置技巧
	(1)禁止显示目录列表：如果你的目录里没有index文件，防止在浏览器地址栏键入该目录的路径，该目录下所有的文件都会显示出来（而不必创建一堆的新index文件）
		Options -Indexes
	(2)阻止/允许特定的ip地址：允许某些特定ip或ip段的用户可以访问你的网站，这只在你知道你想拦截的ip地址时才有用，然而现在网上的大多数用户都使用动态ip地址，所以这并不是限制使用的常用方法
		# 这里的000.000.000.000是被封禁的ip地址。如你输入210.10.56.，则将封禁210.10.56.0～210.10.56.255的所有ip地址
		Deny from 000.000.000.000
		# 允许的ip地址则为000.000.000.000
		Allow from 000.000.000.000
		# 阻止所有人（不影响脚本程序使用这个目录下的文档）
		Deny from all
	(3)替换index文件：不想一直使用index.html或index.php等作为目录的索引文件时，可以配置索引文件，服务器会从左至右进行寻找，检查哪个文件在真实的目录中存在。如果一个也找不到，它将会把目录列表显示出来（除非你已经关闭了显示目录文件列表）
		DirectoryIndex index.html index.php test.html
	(4)重定向(rewrite)：.htaccess最有用的功能之一就是将请求重定向到同站内或站外的不同文件，这在你改变了一个文件名称，但仍然想让用户用旧地址访问到它时，变的极为有用
		页面重定向（访问在root目录下的名为oldfile.html可以键入/oldfile.html，访问一个旧次级目录中的文件可以键入/old/oldfile.html）
			Redirect /location/from/root/file.ext http://new/file/location.xyz
		目录重定向，如果你的网站上有一个名为olddirectory的目录，并且你已经在一个新网站http://newdirectory/上建立了与上相同的文档，你可以将旧目录下所有的文件做一次重定向而不必一一声明。这样，任何指向到站点中/olddirectory目录的请求都将被重新指向新的站点，包括附加的额外URL信息（键入http://olddirecotry/oldfiles/images/image.gif请求将被重定向到http://newdirectory/oldfiles/images/image.gif）
			Redirect /olddirectory http://newdirectory

7.安全配置htaccess文件能够提高你的web服务器的安全水平
	(1)配置.htaccess防盗链：防止服务器资源被盗链
		RewriteBase /
		RewriteCond %{HTTP_REFERER} !^$
		RewriteCond %{HTTP_REFERER} !^http://(www.)?aqee.net/.*$ [NC]
		RewriteRule .(gif|jpg|swf|flv|png)$ /feed/ [R=302,L]
	(2)防黑客：提高网站的安全等级。去掉下面的几行代码，可以防止一些常见恶意url匹配的黑客攻击技术
		RewriteEngine On
		# proc/self/environ?
		RewriteCond %{QUERY_STRING} proc/self/environ [OR]
		# 阻止脚本企图通过URL修改mosConfig值
		RewriteCond %{QUERY_STRING} mosConfig_[a-zA-Z_]{1,21}(=|%3D) [OR]
		# 阻止脚本通过URL传递的base64_encode垃圾信息
		RewriteCond %{QUERY_STRING} base64_encode.*(.*) [OR]
		# 阻止在URL含有<script>标记的脚本
		RewriteCond %{QUERY_STRING} (<|%3C).*script.*(>|%3E) [NC,OR]
		# 阻止企图通过URL设置PHP的GLOBALS变量的脚本
		RewriteCond %{QUERY_STRING} GLOBALS(=|[|%[0-9A-Z]{0,2}) [OR]
		# 阻止企图通过URL设置PHP的_REQUEST变量的脚本
		RewriteCond %{QUERY_STRING} _REQUEST(=|[|%[0-9A-Z]{0,2})
		# 把所有被阻止的请求转向到403禁止提示页面
		RewriteRule ^(.*)$ index.php [F,L]
	(3)阻止访问你的.htaccess文件或者指定类型的文件
		# 保护你的htaccess文件
		<Files .htaccess>
			Order allow,deny
			Deny from all
		</Files>
		# 阻止查看指定的文件
		<Files secretfile.jpg>
			Order allow,deny
			Deny from all
		</Files>
		# 多种文件类型
		<FilesMatch “.(htaccess|htpasswd|ini|phps|fla|psd|log|sh)$”>
		 	Order allow,deny
			Deny from all
		</FilesMatch>[/code]
	(4)禁止脚本执行：加强你的目录安全
		AddHandler cgi-script .php .pl .py .jsp .asp .htm .shtml .sh .cgi
		Options -ExecCGI

8.常用的设置
	(1)时区设置：有些时候，当你在php里使用time或date函数时，由于时区的不同，它会显示出一些很奇怪的信息
		SetEnv TZ Asia/Shanghai
	(2)搜索引擎友好的301永久转向方法：为什么这是搜索引擎友好的呢？因为现在很多现代的搜索引擎都有能根据检查301永久转向来更新它现有的记录的功能
		Redirect 301 http://www.test.com/home http://www.test.com/
	(3)屏蔽下载对话框：通常，当你下载东西的时候，你会看到一个对话框询问你是保存这个文件还是直接打开它。如果你不想看到这个东西，你可以把下面的一段代码放到你的.htaccess文件里
		AddType application/octet-stream .pdf
		AddType application/octet-stream .zip
		AddType application/octet-stream .mov
	(4)省去www前缀：seo的一个原则是，确保你的网站只有一个url。因此，你需要把所有的通过www的访问转向的非www，或者反这来
		RewriteEngine On
		RewriteBase /
		RewriteCond %{HTTP_HOST} ^www.aqee.net [NC]
		RewriteRule ^(.*)$ http://aqee.net/$1 [L,R=301]
	(5)个性化error页面：对每个错误代码定制自己个性化的错误页面
		ErrorDocument 401 /error/401.php
		ErrorDocument 403 /error/403.php
		ErrorDocument 404 /error/404.php
		ErrorDocument 500 /error/500.php
	(6)压缩文件：通过压缩你的文件体积来优化网站的访问速度
		# 压缩text,html,javascript,css,xml
		AddOutputFilterByType DEFLATE text/plain
		AddOutputFilterByType DEFLATE text/html
		AddOutputFilterByType DEFLATE text/xml
		AddOutputFilterByType DEFLATE text/css
		AddOutputFilterByType DEFLATE application/xml
		AddOutputFilterByType DEFLATE application/xhtml+xml
		AddOutputFilterByType DEFLATE application/rss+xml
		AddOutputFilterByType DEFLATE application/javascript
		.AddOutputFilterByType DEFLATE application/x-javascript
	(7)缓存文件：缓存文件是另外一个提高你的网站访问速度的好方法
		<FilesMatch “.(flv|gif|jpg|jpeg|png|ico|swf|js|css|pdf)$”>
			Header set Cache-Control “max-age=2592000″
		</FilesMatch>
	(8)对某些文件类型禁止使用缓存：你也可以定制对某些文件类型禁止使用缓存
		# 显式的规定对脚本和其它动态文件禁止使用缓存
		<FilesMatch “.(pl|php|cgi|spl|scgi|fcgi)$”>
			Header unset Cache-Control
		</FilesMatch>